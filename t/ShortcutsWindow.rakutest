use v6;
use NativeCall;
use Test;

use Gnome::Gtk3::Builder;
use Gnome::Gtk3::ShortcutsWindow;

#use Gnome::N::X;
#Gnome::N::debug(:on);

#-------------------------------------------------------------------------------
my Gnome::Gtk3::ShortcutsWindow() $sw;
#-------------------------------------------------------------------------------
#subtest 'ISA test', {
#  $sw .= new;
#  isa-ok $sw, Gnome::Gtk3::ShortcutsWindow, '.new()';
#}

#-------------------------------------------------------------------------------
subtest 'Manipulations', {
  my Str $build-xml = Q:q:to/END_BUILDXML/;
    <?xml version="1.0" encoding="UTF-8"?>
    <interface>
      <object class="GtkShortcutsWindow" id="shortcuts-clocks">
        <property name="modal">1</property>
        <child>
          <object class="GtkShortcutsSection">
            <property name="section-name">shortcuts</property>
            <property name="max-height">10</property>
            <child>
              <object class="GtkShortcutsGroup">
                <property name="title" translatable="yes">General</property>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;Page_Down</property>
                    <property name="title" translatable="yes">Go to the next section</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;Page_Up</property>
                    <property name="title" translatable="yes">Go to the previous section</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;alt&gt;Q</property>
                    <property name="title" translatable="yes">Quit</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;alt&gt;Right</property>
                    <property name="direction">ltr</property>
                    <property name="title" translatable="yes">Forward</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;Left</property>
                    <property name="direction">ltr</property>
                    <property name="title" translatable="yes">Back</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;alt&gt;Left</property>
                    <property name="direction">rtl</property>
                    <property name="title" translatable="yes">Forward</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;Right</property>
                    <property name="direction">rtl</property>
                    <property name="title" translatable="yes">Back</property>
                  </object>
                </child>
              </object>
            </child>
            <child>
              <object class="GtkShortcutsGroup">
                <property name="view">world</property>
                <property name="title" translatable="yes">World Clocks</property>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;N</property>
                    <property name="title" translatable="yes">Add a world clock</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;S</property>
                    <property name="title" translatable="yes">Select world clocks</property>
                  </object>
                </child>
              </object>
            </child>
            <child>
              <object class="GtkShortcutsGroup">
                <property name="view">alarm</property>
                <property name="title" translatable="yes">Alarm</property>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;N</property>
                    <property name="title" translatable="yes">Add an alarm</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">&lt;ctrl&gt;S</property>
                    <property name="title" translatable="yes">Select alarms</property>
                  </object>
                </child>
              </object>
            </child>
            <child>
              <object class="GtkShortcutsGroup">
                <property name="view">stopwatch</property>
                <property name="title" translatable="yes">Stopwatch</property>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">Return space</property>
                    <property name="title" translatable="yes">Start / Stop / Continue</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">L</property>
                    <property name="title" translatable="yes">Lap</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">Delete</property>
                    <property name="title" translatable="yes">Reset</property>
                  </object>
                </child>
              </object>
            </child>
            <child>
              <object class="GtkShortcutsGroup">
                <property name="view">timer</property>
                <property name="title" translatable="yes">Timer</property>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">Return space</property>
                    <property name="title" translatable="yes">Start / Stop / Pause</property>
                  </object>
                </child>
                <child>
                  <object class="GtkShortcutsShortcut">
                    <property name="accelerator">Delete</property>
                    <property name="title" translatable="yes">Reset</property>
                  </object>
                </child>
              </object>
            </child>
          </object>
        </child>
      </object>
    </interface>
    END_BUILDXML

  my Gnome::Gtk3::Builder $builder .= new(:string($build-xml));
  $sw = $builder.get-object('shortcuts-clocks');
  note $sw.gist;
}

#-------------------------------------------------------------------------------
subtest 'Properties ...', {
  my @r = $sw.get-properties( 'section-name', Str, 'view-name', Str);
  is-deeply @r, [ 'internal-search', ""], 'section-name, view-name';
}

#-------------------------------------------------------------------------------
done-testing;

=finish


#-------------------------------------------------------------------------------
# set environment variable 'raku-test-all' if rest must be tested too.
unless %*ENV<raku_test_all>:exists {
  done-testing;
  exit;
}

#-------------------------------------------------------------------------------
subtest 'Inherit Gnome::Gtk3::ShortcutsWindow', {
  class MyClass is Gnome::Gtk3::ShortcutsWindow {
    method new ( |c ) {
      self.bless( :GtkShortcutsWindow, |c);
    }

    submethod BUILD ( *%options ) {

    }
  }

  my MyClass $mgc .= new;
  isa-ok $mgc, Gnome::Gtk3::ShortcutsWindow, 'MyClass.new()';
}

#-------------------------------------------------------------------------------
subtest 'Interface ...', {
}

#-------------------------------------------------------------------------------
subtest 'Properties ...', {
  use Gnome::GObject::Value;
  use Gnome::GObject::Type;

  #my Gnome::Gtk3::ShortcutsWindow $sw .= new;

  sub test-property (
    $type, Str $prop, Str $routine, $value,
    Bool :$approx = False, Bool :$is-local = False
  ) {
    my Gnome::GObject::Value $gv .= new(:init($type));
    $sw.get-property( $prop, $gv);
    my $gv-value = $gv."$routine"();
    if $approx {
      is-approx $gv-value, $value,
        "property $prop, value: " ~ $gv-value;
    }

    # dependency on local settings might result in different values
    elsif $is-local {
      if $gv-value ~~ /$value/ {
        like $gv-value, /$value/, "property $prop, value: " ~ $gv-value;
      }

      else {
        ok 1, "property $prop, value: " ~ $gv-value;
      }
    }

    else {
      is $gv-value, $value,
        "property $prop, value: " ~ $gv-value;
    }
    $gv.clear-object;
  }

  # example calls
  #test-property( G_TYPE_BOOLEAN, 'homogeneous', 'get-boolean', False);
  #test-property( G_TYPE_STRING, 'label', 'get-string', '...');
  #test-property( G_TYPE_FLOAT, 'xalign', 'get-float', 23e-2, :approx);
}

#-------------------------------------------------------------------------------
subtest 'Themes ...', {
}

#-------------------------------------------------------------------------------
subtest 'Signals ...', {
  use Gnome::Gtk3::Main;
  use Gnome::N::GlibToRakuTypes;

  my Gnome::Gtk3::Main $main .= new;

  class SignalHandlers {
    has Bool $!signal-processed = False;

    method ... (
      'any-args',
      Gnome::Gtk3::ShortcutsWindow :$_widget, gulong :$_handler-id
      # --> ...
    ) {

      isa-ok $_widget, Gnome::Gtk3::ShortcutsWindow;
      $!signal-processed = True;
    }

    method signal-emitter ( Gnome::Gtk3::ShortcutsWindow :$widget --> Str ) {

      while $main.gtk-events-pending() { $main.iteration-do(False); }

      $widget.emit-by-name(
        'signal',
      #  'any-args',
      #  :return-type(int32),
      #  :parameters([int32,])
      );
      is $!signal-processed, True, '\'...\' signal processed';

      while $main.gtk-events-pending() { $main.iteration-do(False); }

      #$!signal-processed = False;
      #$widget.emit-by-name(
      #  'signal',
      #  'any-args',
      #  :return-type(int32),
      #  :parameters([int32,])
      #);
      #is $!signal-processed, True, '\'...\' signal processed';

      while $main.gtk-events-pending() { $main.iteration-do(False); }
      sleep(0.4);
      $main.gtk-main-quit;

      'done'
    }
  }

  my Gnome::Gtk3::ShortcutsWindow $sw .= new;

  #my Gnome::Gtk3::Window $w .= new;
  #$w.add($m);

  my SignalHandlers $sh .= new;
  $sw.register-signal( $sh, 'method', 'signal');

  my Promise $p = $sw.start-thread(
    $sh, 'signal-emitter',
    # :!new-context,
    # :start-time(now + 1)
  );

  is $main.gtk-main-level, 0, "loop level 0";
  $main.gtk-main;
  #is $main.gtk-main-level, 0, "loop level is 0 again";

  is $p.result, 'done', 'emitter finished';
}
